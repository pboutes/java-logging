---
apiVersion: v1
kind: ConfigMap
metadata:
  name: elastic-monitor-heartbeat-config
  namespace: default
  labels:
    k8s-app: heartbeat
data:
  heartbeat.yml: |-
    heartbeat.monitors:
      - type: http
        name: "http"
        schedule: '@every 5s'
        urls:
          - http://logstash:9600
          - https://www.elastic.co

      - type: http
        name: "elasticsearch health api"
        schedule: '@every 5s'
        urls: ["https://${ELASTICSEARCH_HOST}:${ELASTICSEARCH_PORT:9200}/_cat/health"]
        username: ${ELASTICSEARCH_USERNAME}
        password: ${ELASTICSEARCH_PASSWORD}
        ssl.certificate_authorities:
        - /mnt/elastic/tls.crt


    processors:
      - add_docker_metadata: ~

    output.elasticsearch:
      hosts: ['https://${ELASTICSEARCH_HOST:elasticsearch}:${ELASTICSEARCH_PORT:9200}']
      username: ${ELASTICSEARCH_USERNAME}
      password: ${ELASTICSEARCH_PASSWORD}
      ssl.certificate_authorities:
      - /mnt/elastic/tls.crt

    setup.kibana:
      host: "https://${KIBANA_HOST}:5601"
      ssl.enabled: true
      ssl.certificate_authorities:
      - mnt/kibana/ca.crt

    monitoring:
      enabled: true
      elasticsearch:
        hosts: ["https://${ELASTICSEARCH_HOST:elasticsearch}:${ELASTICSEARCH_PORT:9200}"]

---

apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: elastic-monitor-heartbeat
  namespace: default
  labels:
    k8s-app: heartbeat
spec:
  selector:
    matchLabels:
      k8s-app: heartbeat
  template:
    metadata:
      labels:
        k8s-app: heartbeat
    spec:
      serviceAccountName: elastic-monitor-heartbeat
      terminationGracePeriodSeconds: 30
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
        - name: heartbeat
          image: docker.elastic.co/beats/heartbeat:7.3.0
          args: [
            "-c", "/etc/heartbeat.yml",
            "-e",
          ]
          env:
            - name: ELASTICSEARCH_HOST
              value: elastic-monitor-es-http
            - name: KIBANA_HOST
              value: elastic-monitor-kb-http
            - name: ELASTICSEARCH_PORT
              value: "9200"
            - name: ELASTICSEARCH_USERNAME
              value: elastic
            - name: ELASTICSEARCH_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: elastic
                  name: elastic-monitor-es-elastic-user
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          securityContext:
            runAsUser: 0
            # If using Red Hat OpenShift uncomment this:
            #privileged: true
          resources:
            limits:
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 100Mi
          volumeMounts:
            - name: config
              mountPath: /etc/heartbeat.yml
              readOnly: true
              subPath: heartbeat.yml
            - name: data
              mountPath: /usr/share/heartbeat/data
            - name: varlibdockercontainers
              mountPath: /var/lib/docker/containers
              readOnly: true
            - name: varlog
              mountPath: /var/log
              readOnly: true
            - name: dockersock
              mountPath: /var/run/docker.sock
            - name: es-certs
              mountPath: /mnt/elastic/tls.crt
              readOnly: true
              subPath: tls.crt
            - name: kb-certs
              mountPath:  /mnt/kibana/ca.crt
              readOnly: true
              subPath: ca.crt
      volumes:
        - name: config
          configMap:
            defaultMode: 0600
            name: elastic-monitor-heartbeat-config
        - name: varlibdockercontainers
          hostPath:
            path: /var/lib/docker/containers
        - name: varlog
          hostPath:
            path: /var/log
        # data folder stores a registry of read status for all files, so we don't send everything again on a heartbeat pod restart
        - name: data
          hostPath:
            path: /var/lib/heartbeat-data
            type: DirectoryOrCreate
        - name: dockersock
          hostPath:
            path: /var/run/docker.sock
        - name: es-certs
          secret:
            secretName: elastic-monitor-es-http-certs-public
        - name: kb-certs
          secret:
            secretName: elastic-monitor-kb-http-certs-public
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: elastic-monitor-heartbeat
subjects:
  - kind: ServiceAccount
    name: elastic-monitor-heartbeat
    namespace: default
roleRef:
  kind: ClusterRole
  name: elastic-monitor-heartbeat
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: elastic-monitor-heartbeat
  labels:
    k8s-app: heartbeat
rules:
  - apiGroups: [""] # "" indicates the core API group
    resources:
      - namespaces
      - pods
    verbs:
      - get
      - watch
      - list
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: elastic-monitor-heartbeat
  namespace: default
  labels:
    k8s-app: heartbeat
---